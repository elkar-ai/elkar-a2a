# name: Release Python Package

# on:
#   push:
#     branches:
#       - main
#       - master
#     tags:
#       - "v*"

# jobs:
#   release:
#     name: Release
#     runs-on: ubuntu-latest
#     permissions:
#       contents: write
#       packages: write

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 0

#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: "3.11"

#       - name: Install uv
#         run: |
#           curl -LsSf https://astral.sh/uv/install.sh | sh
#           echo "$HOME/.cargo/bin" >> $GITHUB_PATH

#       - name: Install dependencies
#         run: |
#           uv pip install build twine bump2version

#       - name: Configure Git
#         run: |
#           git config --global user.name "GitHub Actions"
#           git config --global user.email "actions@github.com"

#       - name: Bump version
#         if: startsWith(github.ref, 'refs/tags/')
#         run: |
#           TAG_VERSION=${GITHUB_REF#refs/tags/v}
#           bump2version --new-version $TAG_VERSION --allow-dirty
#           git add .
#           git commit -m "Bump version to $TAG_VERSION"
#           git push

#       - name: Build package
#         run: uv build

#       - name: Create Release
#         if: startsWith(github.ref, 'refs/tags/')
#         uses: softprops/action-gh-release@v1
#         with:
#           files: dist/*
#           generate_release_notes: true
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#       - name: Publish to PyPI
#         if: startsWith(github.ref, 'refs/tags/')
#         run: |
#           python -m twine upload dist/*
#         env:
#           TWINE_USERNAME: __token__
#           TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
